//! Map позволяет делать доступ по ключу, а сортировать и фильтровать мешает или в модели сделать геттер для получения в виде массива или сразу свойство

//! const prevFormComponent = this.#formComponent; //! скорее всего форму нужно пересоздать после сохранения, но сначала посомтреть может все данные уже будут в форме

//! if (!prevItemComponent || !prevFormComponent) {

//! replace(this.#taskEditComponent, prevTaskEditComponent);

//! trip -> events?

//! Дубль кода как в модели(events-model.js) вынести в utils или event

//! Одинаково у всех презенторов, можно выделить в абстарктный презентор

//! Предусмотреть вариант с добавлением нового события, будет Item, Form по умолчанию, но форм в режиме добавления,

//! а при отмене на форме или из главного презетора удалить оба елемента, скорее всего путем полной перерисовки.

//! возможно нужен для подсчета полной стоимости

//! возможно стоит отрисовать в конструкторе или init и не заводить #headerTripFiltersElement

//! временно

//! временно - скорее всего нужно сделать init()

//! временно, как будет готова фильтрация, то отфильтровать filterEvents(this.#currentFilterType);

//! временно, разный текст в зависмости от фильтра, и обработка нажатий

//! временный код для генерации заголовка

//! глянуть в ТЗ нужно ли учитывать весь день, т.е. <= 01.01.2000 23:59:59 или < 02.01.2000 00:00.00

//! добавить сохранение данных, а потом заменить/закрыть

//! если передать все offers, то можно обработать изменения типа, если по ТЗ не нужно обновлять offers с сервера

//! заготовка

//! может есть смыл добавить, что то постоянно вычисляемое...

//! можно собрать и один раз в конструкторе

//! например durationMinutes, для использования при сортироке, подсчета Info

//! оставить один селектор, и других местах проверить

//! по ТЗ не нужен Enter, но можно добавить, если не будет мешать автотестам

//! пока не используется, при добавлении нет=null?, при редактировании подставить

//! почитать в ТЗ как считать сумму!

//! почитать в ТЗ, что показывать когда событий меньше трех и проверить это!

//! при измении пунтка назначения, можно заменить информацию, если по ТЗ не нужно обновлять destinations с сервера

//! применить dayjs isBefore isAfter

//! проверить что now, не старое, наверное необходимо перерысовывать при определенных условиях и now переедвать с перезтора

//! сделать (events) => {} и для проверок и для фильтрации, сортивки!

//! тут нужнозвать пересчет Info и при добавлении точки

//! у каждого фильтра свое сообщение в ТЗ поискать

//! удалить, если не будет использоваться нигде кроме конструктора
